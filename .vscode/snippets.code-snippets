{
  // Place your smdn-design-system workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Typescript React Function Component Styled": {
    "prefix": "smdn",
    "body": [
      "import React from 'react'",
      "import PropTypes from 'prop-types'",
      "import styled from 'styled-components'",
      "",
      "const Styled${TM_FILENAME_BASE} = styled.div``",
      "",
      "export interface I${TM_FILENAME_BASE}Props {}",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<I${TM_FILENAME_BASE}Props> = () => {",
      "\treturn (",
      "\t\t<div className=\"smdn-${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}\" data-test=\"${TM_FILENAME_BASE/(^[A-Z][a-z]*|[a-z])([A-Z])?/${1:/downcase}${2:+-}${2:/downcase}/g}-component\" >",
      "\t\t\t$2",
      "\t\t</div>",
      "\t)",
      "}",
      "",
      "${TM_FILENAME_BASE}.propTypes = {",
      "\t",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}"
    ],
    "description": "Typescript React Function Component",
    "scope": "typescriptreact"
  }
}
